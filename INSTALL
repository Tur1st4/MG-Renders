#!/bin/bash

# Autor          :        Paulo Jacob [ Tur1st4 ]
# Descrição      :        Criar as pastas necessárias para o download de suas buscas no site MG-Renders.net
# Versão         :        0.4
# Licença        :        MIT License

#========================| VARIAVEIS |========================#

azul_n='\e[01;44m'

branc_n='\e[01;37m'

verde_n='\e[01;32m'

verm_n='\e[01;31m'

res='\e[m'

pasta_exec="Execucoes"

x=0

sg=0

contagem=3

#========================| FUNÇÕES |========================#

_ctrl_c(){
	echo -e "\n"
	
	echo -e "Você apertou$verm_n Ctrl+C$res.\nEntão sou obrigado a parar ;-;"
	
	echo -e "\n"
	
	setterm -cursor on
	
	exit 127
}

_execucoes(){
	if [[ -d  "$pasta_exec" ]]
		then
			echo
	else
			mkdir "$pasta_exec"
	fi
}

_principal(){
	if [[ -d "$pasta_exec/Principal" ]]
		then
			echo
	else
			mkdir "$pasta_exec/Principal"
	fi
}

_loop(){
	if [[ -d "$pasta_exec/Loop" ]]
		then
			echo
	else
			mkdir "$pasta_exec/Loop"
	fi
}

declare -x _pastas=("Criando a pasta Execucoes..."
		    
			"Criando a pasta Principal..."
		    
			"Criando a pasta Loop........"
)

declare -x _comandos=("_execucoes"
		     
			  "_principal"
		      
			  "_loop"
)

_rodar(){
	{
		while true
		do
			trap "exit" SIGUSR1
		done; } &
		
		pid=$!
}

_verificacao(){
	for n in {0..2}; do
		echo -en "$branc_n > $res"; echo -en ${_pastas[$n]}
		
		_rodar

	sleep 2; eval ${_comandos[$n]} >> erro.fodeu 2>erro.fodeu

	if [[ "$?" == "0" ]]
	then
		echo -en "$verde_n [ok]$res"
		
		echo -e "\n"
		
		kill -USR1 $pid
		
		wait $pid
		
		trap EXIT
	else
		echo -en "$verm_n [erro]$res"
		
		echo -e "\n"
		
		setterm -cursor on
		
		kill -USR1 $pid
		
		trap EXIT
		
		exit $?
	fi
	done
}

_check_save(){
	if [[ -d $LOC ]]
	then
		echo $LOC > Execucoes/save.tur1st4
	else
		clear
		
		echo -e "\n"
		
		echo -e "$verm_n <$res O local não existe. Cheque se você escreveu corretamente. $verm_n> $res"
		
		_local_save
	fi
}

_local_save(){
	echo -e "\n"
	
	echo -e "$verde_n >$res Coloque o local onde deseja salvar seus renders: \c"
	
	read LOC
	
	_check_save
}

#========================| INICIALIZAR |========================#

clear

setterm -cursor off

trap _ctrl_c SIGINT SIGTERM

cat <<DES

		INSTALADOR MG-PROJECT :~
	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

	 O script criará as seguintes pastas:
	  ->/Execucoes
	  ->/Execucoes/Principal
	  ->/Execucoes/Seds
	  ->/Execucoes/Loop

	 Depois dessa etapa, será perguntado on-
	de você gostaria de salvar seus renders.
	Lembre-se, coloque o caminho completo:
	 EX:
	  Windows:
	   -> /mnt/c/Users/Tur1st4/Downloads/Img
	  Linux:
	   -> /home/tur1st4/Downloads/Img

	 Terminando todos os processos, execute
	o 'main.sh' que está nessa pasta, com o
	comando:
	   -> ./main.sh

	=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

DES

echo -e "$branc_n \bDeseja começar a instalação? [S/N]$res\c"
read INS

if [[ "$INS" == @(S|s|sim|Sim|SIM) ]]
then
	echo
	
	echo -ne "Preparando instalação"
	
	while [[ "$x" -le "3" ]]; do
		if [[ "$x" -lt "3" ]]
		then
			echo -ne "$verde_n.$res"
		fi
		sleep 0.8
		
		let x=x+1
	done
elif [[ "$INS" == @(N|n|nao|não|Não|Nao|NAO|NÃO) ]]
then
	clear
	
	echo
	
	echo -e "$verm_n \bVocê cancelou$res ._."
	
	echo
	
	exit 1
else
	clear
	echo
	
	echo -e "$verm_n >$res Não consigo entender essa resposta .-.\nMe execute de novo."
	
	echo
	
	exit $?
fi

clear

echo -e "\n"

_verificacao

echo -ne "Preparando a segunda etapa"

while [[ "$sg" -le "3" ]]
do
	if [[ "$sg" -lt "3" ]]
	then
		echo -ne "$verde_n.$res"
	fi
	sleep 0.8
	
	let sg=sg+1
done

clear

_local_save

echo -e "\n"

echo -e "$verde_n    >$res Local salvo com sucesso!$verde_n <$res"

echo -e "\n"

contagem=3

echo -ne "Saindo do instalador em $contagem"

while [[ "$contagem" -ge "0" ]]
do
	if [[ "$contagem" -ge "0" ]]
	then
		echo -ne "$verm_n\b$contagem$res"
	fi
	sleep 1
	
	let contagem=contagem-1
done

chmod +x Sed/*

clear

echo -e "\n"

echo -e "$verde_n \bInstalação concluída com êxito!$res"

echo -e "\n"

setterm -cursor on

rm erro.fodeu

exit 0